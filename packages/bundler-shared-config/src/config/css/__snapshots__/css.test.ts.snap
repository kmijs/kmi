// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`css > should support custom less loader options 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "additionalData": "@import \\"test.less\\";",
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;

exports[`css > should support custom less loader options with function 1`] = `
"{
  module: {
    rules: [
      /* config.module.rule('css') */
      {
        test: /\\.css(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('css').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('css').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('css').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\\.less(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('less').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('less').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('less').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              },
              /* config.module.rule('less').oneOf('css').use('less-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js',
                options: {
                  additionalData: () => '@import \\"test.less\\";',
                  lessOptions: (loaderContext) => ({
                    modifyVars: userConfig.theme,
                    javascriptEnabled: true,
                    ...typeof lessLoader === \\"function\\" ? lessLoader(loaderContext) : lessLoader
                  })
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\\.(sass|scss)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('sass').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('sass').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              },
              /* config.module.rule('sass').oneOf('css').use('sass-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\\.(styl|stylus)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  }
}"
`;

exports[`css > should support custom less loader options with function 2`] = `
"{
  module: {
    rules: [
      /* config.module.rule('css') */
      {
        test: /\\.css(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('css').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('css').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('css').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\\.less(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('less').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('less').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('less').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              },
              /* config.module.rule('less').oneOf('css').use('less-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js',
                options: {
                  lessOptions: (loaderContext) => ({
                    modifyVars: userConfig.theme,
                    javascriptEnabled: true,
                    ...typeof lessLoader === \\"function\\" ? lessLoader(loaderContext) : lessLoader
                  })
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\\.(sass|scss)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('sass').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('sass').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              },
              /* config.module.rule('sass').oneOf('css').use('sass-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\\.(styl|stylus)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('lightningcssLoader') */
              {
                loader: 'builtin:lightningcss-loader',
                options: {
                  targets: [
                    '> 1%',
                    'last 2 versions',
                    'not ie <= 11'
                  ]
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  }
}"
`;

exports[`css > 在 webpack 模式下不应使用 LightningCSS 1`] = `
"{
  module: {
    rules: [
      /* config.module.rule('css') */
      {
        test: /\\.css(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('css').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('css').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('css').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\\.less(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('less').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('less').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('less').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('less').oneOf('css').use('less-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/less-loader/index.js',
                options: {
                  implementation: '<WORKSPACE>/packages/bundler-shared/compiled/less/index.js',
                  lessOptions: (loaderContext) => ({
                    modifyVars: userConfig.theme,
                    javascriptEnabled: true,
                    ...typeof lessLoader === \\"function\\" ? lessLoader(loaderContext) : lessLoader
                  })
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\\.(sass|scss)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('sass').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('sass').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('sass').oneOf('css').use('sass-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\\.(styl|stylus)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  }
}"
`;

exports[`css > 应该在Rspack中默认启用Less多线程编译 1`] = `
"{
  module: {
    rules: [
      /* config.module.rule('css') */
      {
        test: /\\.css(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('css').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('css').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('css').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\\.less(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('less').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('less').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('less').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('less').oneOf('css').use('less-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js',
                options: {
                  lessOptions: (loaderContext) => ({
                    modifyVars: userConfig.theme,
                    javascriptEnabled: true,
                    ...typeof lessLoader === \\"function\\" ? lessLoader(loaderContext) : lessLoader
                  })
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\\.(sass|scss)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('sass').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('sass').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('sass').oneOf('css').use('sass-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\\.(styl|stylus)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  }
}"
`;

exports[`css > 应该支持自动CSS模块化 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[local]___[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[local]___[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[local]___[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[local]___[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;

exports[`css > 应该支持自定义CSS模块配置 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[name]__[local]--[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[name]__[local]--[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[name]__[local]--[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "resourceQuery": /modules/,
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": {
                    "localIdentName": "[name]__[local]--[hash:base64:5]",
                  },
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;

exports[`css > 应该支持自定义LightningCSS配置 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "drafts": {
                    "customMedia": true,
                  },
                  "minify": true,
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "drafts": {
                    "customMedia": true,
                  },
                  "minify": true,
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "drafts": {
                    "customMedia": true,
                  },
                  "minify": true,
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "drafts": {
                    "customMedia": true,
                  },
                  "minify": true,
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;

exports[`css > 应该支持自定义PostCSS插件 1`] = `
"{
  module: {
    rules: [
      /* config.module.rule('css') */
      {
        test: /\\.css(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('css').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('css').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 2,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('css').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      },
                      () => ({ postcssPlugin: \\"custom-plugin\\" })
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\\.less(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('less').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('less').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 2,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('less').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      },
                      () => ({ postcssPlugin: \\"custom-plugin\\" })
                    ]
                  }
                }
              },
              /* config.module.rule('less').oneOf('css').use('less-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js',
                options: {
                  lessOptions: (loaderContext) => ({
                    modifyVars: userConfig.theme,
                    javascriptEnabled: true,
                    ...typeof lessLoader === \\"function\\" ? lessLoader(loaderContext) : lessLoader
                  })
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\\.(sass|scss)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('sass').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 2,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('sass').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      },
                      () => ({ postcssPlugin: \\"custom-plugin\\" })
                    ]
                  }
                }
              },
              /* config.module.rule('sass').oneOf('css').use('sass-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\\.(styl|stylus)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 2,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      },
                      () => ({ postcssPlugin: \\"custom-plugin\\" })
                    ]
                  }
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  }
}"
`;

exports[`css > 应该支持自定义Sass加载器配置 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
                "options": {
                  "sassOptions": {
                    "includePaths": [
                      "./node_modules",
                    ],
                  },
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "builtin:lightningcss-loader",
                "options": {
                  "targets": [
                    "> 1%",
                    "last 2 versions",
                    "not ie <= 11",
                  ],
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;

exports[`css > 应该支持自定义主题变量 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;

exports[`css > 应该支持自定义样式加载器 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/style-loader/index.js",
                "options": {
                  "base": 0,
                  "esModule": true,
                  "injectType": "singletonStyleTag",
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/style-loader/index.js",
                "options": {
                  "base": 0,
                  "esModule": true,
                  "injectType": "singletonStyleTag",
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/style-loader/index.js",
                "options": {
                  "base": 0,
                  "esModule": true,
                  "injectType": "singletonStyleTag",
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/style-loader/index.js",
                "options": {
                  "base": 0,
                  "esModule": true,
                  "injectType": "singletonStyleTag",
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 1,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;

exports[`css > 应该正确配置基本的CSS规则 1`] = `
"{
  module: {
    rules: [
      /* config.module.rule('css') */
      {
        test: /\\.css(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('css').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('css').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('css').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\\.less(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('less').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('less').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('less').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('less').oneOf('css').use('less-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js',
                options: {
                  lessOptions: (loaderContext) => ({
                    modifyVars: userConfig.theme,
                    javascriptEnabled: true,
                    ...typeof lessLoader === \\"function\\" ? lessLoader(loaderContext) : lessLoader
                  })
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\\.(sass|scss)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('sass').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('sass').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('sass').oneOf('css').use('sass-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\\.(styl|stylus)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  }
}"
`;

exports[`css > 应该能够禁用Less多线程编译 1`] = `
"{
  module: {
    rules: [
      /* config.module.rule('css') */
      {
        test: /\\.css(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('css').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('css').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('css').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\\.less(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('less').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('less').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('less').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('less').oneOf('css').use('less-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/less-loader/index.js',
                options: {
                  implementation: '<WORKSPACE>/packages/bundler-shared/compiled/less/index.js',
                  lessOptions: (loaderContext) => ({
                    modifyVars: userConfig.theme,
                    javascriptEnabled: true,
                    ...typeof lessLoader === \\"function\\" ? lessLoader(loaderContext) : lessLoader
                  })
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\\.(sass|scss)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('sass').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('sass').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('sass').oneOf('css').use('sass-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\\.(styl|stylus)(\\?.*)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('css') */
          {
            sideEffects: true,
            use: [
              /* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
              {
                loader: 'mock-css-extract-plugin-loader',
                options: {
                  emit: true,
                  esModule: true
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('css-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js',
                options: {
                  importLoaders: 1,
                  esModule: true,
                  url: {
                    filter: (url) => {
                      if (url.startsWith(\\"/\\"))
                        return false;
                      return true;
                    }
                  },
                  'import': true,
                  modules: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('postcss-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js',
                options: {
                  postcssOptions: {
                    ident: 'postcss',
                    plugins: [
                      function (e){var r=Object.assign({bug4:true,bug6:true,bug81a:true},e);return{postcssPlugin:\\"postcss-flexbugs-fixes\\",Once:function(e,a){e.walkDecls((function(e){if(e.value.indexOf(\\"var(\\")>-1){return}if(e.value===\\"none\\"){return}var s=a.list.space(e.value);if(i.indexOf(e.value)>0&&s.length===1){return}if(r.bug4){u(e)}if(r.bug6){n(e)}if(r.bug81a){t(e)}}))}}},
                      {
                        postcssPlugin: 'postcss-preset-env',
                        plugins: [
                          {
                            postcssPlugin: 'postcss-unset-value',
                            Declaration(_){if(\\"unset\\"!==_.value.toLowerCase())return;let ie=!1;X.has(_.prop.toLowerCase())?ie=\\"inherit\\":re.has(_.prop.toLowerCase())&&(ie=\\"initial\\"),ie&&(_.cloneBefore({prop:_.prop,value:ie}),ne.preserve||_.remove())}
                          },
                          {
                            postcssPlugin: 'postcss-custom-properties',
                            prepare(){let _=new Map;return pe?{Once:re=>{_=w(re,{preserve:X})},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:()=>{_.clear()}}:{Once:async ne=>{const ie=(await le).entries(),pe=w(ne,{preserve:X}).entries();if(re)for(const[X,re]of[...ie,...pe])_.set(X,re);else for(const[X,re]of[...pe,...ie])_.set(X,re);await function(_,X){return Promise.all(X.map((async X=>{if(X instanceof Function)return void await X(C(_));if(\\"string\\"==typeof X){const re=fe.default.resolve(X),ne=fe.default.extname(re).slice(1).toLowerCase();return void await L(re,ne,C(_))}let re={};if(re=\\"toJSON\\"in X?X.toJSON(C(_)):C(_),\\"to\\"in X){const _=fe.default.resolve(X.to);let ne=X.type;return ne||(ne=fe.default.extname(_).slice(1).toLowerCase()),void await L(_,ne,re)}\\"customProperties\\"in X?X.customProperties=re:\\"custom-properties\\"in X&&(X[\\"custom-properties\\"]=re)})))}(_,ae)},Declaration:re=>{k(re,_,{preserve:X})},OnceExit:(X,{result:re})=>{!ne&&(ie.length>0||ae.length>0)&&X.warn(re,'\\"importFrom\\" and \\"exportTo\\" will be removed in a future version of postcss-custom-properties.\\nWe are looking for insights and anecdotes on how these features are used so that we can design the best alternative.\\nPlease let us know if our proposal will work for you.\\nVisit the discussion on github for more details. https://github.com/csstools/postcss-plugins/discussions/192'),_.clear()}}}
                          },
                          {
                            postcssPlugin: 'postcss-media-minmax',
                            AtRule: {
                              media: _=>{transform(_)},
                              'custom-media': _=>{transform(_)}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-logical-properties',
                            Declaration: {
                              clear: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'float': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              resize: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'text-align': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-block-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'max-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'min-inline-size': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              margin: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'margin-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              inset: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'inset-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              padding: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'padding-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-block-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-end-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start': ne=>{if(Y(ne))return;const ie=ne.parent,ae=[ne.value];_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-inline-start-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-end-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-end-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-start-start-radius': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-color': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-style': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'border-width': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              transition: ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()},
                              'transition-property': ne=>{if(Y(ne))return;const ie=ne.parent,ae=U(ne.value,!0);_(ne,ae,re,X),ie.nodes.length||ie.remove()}
                            }
                          },
                          {
                            postcssPlugin: 'postcss-initial',
                            Declaration: function (re){if(!/\\binitial\\b/.test(re.value)){return}var ne=X(re.prop,re.value);if(ne.length===0)return;ne.forEach((function(_){if(!getPropPrevTo(re.prop,re)){re.cloneBefore(_)}}));if(_.replace===true){re.remove()}}
                          },
                          {
                            postcssPlugin: 'postcss-page-break',
                            Declaration(_){if(_.prop.startsWith(\\"break-\\")&&/^break-(inside|before|after)/.test(_.prop)){if(_.value.search(/column|region/)>=0){return}let X;switch(_.value){case\\"page\\":X=\\"always\\";break;case\\"avoid-page\\":X=\\"avoid\\";break;default:X=_.value}const re=\\"page-\\"+_.prop;if(_.parent.every((_=>_.prop!==re))){_.cloneBefore({prop:re,value:X})}}}
                          },
                          {
                            postcssPlugin: 'postcss-font-variant',
                            Once(_){_.walkRules(walkRule)}
                          },
                          {
                            postcssPlugin: 'postcss-gap-properties',
                            Declaration(_){if(!X.includes(_.prop.toLowerCase()))return;if(!_.parent.some((_=>\\"decl\\"===_.type&&(\\"display\\"===_.prop.toLowerCase()&&\\"grid\\"===_.value.toLowerCase()))))return;const ne=\`grid-\${_.prop.toLowerCase()}\`;_.parent.some((_=>\\"decl\\"===_.type&&_.prop.toLowerCase()===ne))||(_.cloneBefore({prop:ne}),re||_.remove())}
                          },
                          {
                            postcssPlugin: 'autoprefixer',
                            prepare(B){let C=loadPrefixes({from:B.opts.from,env:e.env});return{OnceExit(t){timeCapsule(B,C);if(e.remove!==false){C.processor.remove(t,B)}if(e.add!==false){C.processor.add(t,B)}}}},
                            info(B){B=B||{};B.from=B.from||process.cwd();return a(loadPrefixes(B))},
                            options: {
                              overrideBrowserslist: [
                                '> 1%',
                                'last 2 versions',
                                'not ie <= 11'
                              ],
                              flexbox: 'no-2009'
                            },
                            browsers: [
                              '> 1%',
                              'last 2 versions',
                              'not ie <= 11'
                            ]
                          },
                          {
                            postcssPlugin: 'postcss-progressive-custom-properties',
                            RuleExit: (_,{postcss:X})=>{const re=[],ne=new Set;_.each((ie=>{if(\\"decl\\"!==ie.type)return;if(!ie.variable)return;if(\\"initial\\"===ie.value.trim())return;if(\\"\\"===ie.value.trim())return;if(!ne.has(ie.prop.toString()))return void ne.add(ie.prop.toString());const ae=i(ie.value);if(!ae.length)return;const le=X.atRule({name:\\"supports\\",params:ae.join(\\" and \\"),source:_.source,raws:{before:\\"\\n\\n\\",after:\\"\\n\\"}}),pe=_.clone();pe.removeAll(),pe.raws.before=\\"\\n\\",pe.append(ie.clone()),ie.remove(),le.append(pe),re.push(le)})),0!==re.length&&re.reverse().forEach((X=>{_.after(X)}))}
                          },
                          {
                            postcssPlugin: 'postcss-preset-env',
                            OnceExit: function (ie,{result:le}){$e(ne,ie,le),re.debug&&X.dumpLogs(le),X.resetLogger(),re.exportTo&&Ys(ae.exportTo,_.exportTo)}
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              /* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
              {
                loader: '<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  }
}"
`;

exports[`css > 应该能够禁用LightningCSS并启用PostCSS 1`] = `
{
  "module": {
    "rules": [
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 2,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      [Function],
                    ],
                  },
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 2,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      [Function],
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-shared-config/dist/config/css/less/index.js",
                "options": {
                  "lessOptions": [Function],
                },
              },
            ],
          },
        ],
        "test": /\\\\\\.less\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 2,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      [Function],
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/sass-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(sass\\|scss\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
      {
        "oneOf": [
          {
            "sideEffects": true,
            "use": [
              {
                "loader": "mock-css-extract-plugin-loader",
                "options": {
                  "emit": true,
                  "esModule": true,
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/css-loader/index.js",
                "options": {
                  "esModule": true,
                  "import": true,
                  "importLoaders": 2,
                  "modules": undefined,
                  "url": {
                    "filter": [Function],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/postcss-loader/index.js",
                "options": {
                  "postcssOptions": {
                    "ident": "postcss",
                    "plugins": [
                      [Function],
                      {
                        "plugins": [
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          {
                            "AtRule": {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          {
                            "Declaration": {
                              "block-size": [Function],
                              "border-block": [Function],
                              "border-block-color": [Function],
                              "border-block-end": [Function],
                              "border-block-end-color": [Function],
                              "border-block-end-style": [Function],
                              "border-block-end-width": [Function],
                              "border-block-start": [Function],
                              "border-block-start-color": [Function],
                              "border-block-start-style": [Function],
                              "border-block-start-width": [Function],
                              "border-block-style": [Function],
                              "border-block-width": [Function],
                              "border-color": [Function],
                              "border-end-end-radius": [Function],
                              "border-end-start-radius": [Function],
                              "border-inline": [Function],
                              "border-inline-color": [Function],
                              "border-inline-end": [Function],
                              "border-inline-end-color": [Function],
                              "border-inline-end-style": [Function],
                              "border-inline-end-width": [Function],
                              "border-inline-start": [Function],
                              "border-inline-start-color": [Function],
                              "border-inline-start-style": [Function],
                              "border-inline-start-width": [Function],
                              "border-inline-style": [Function],
                              "border-inline-width": [Function],
                              "border-start-end-radius": [Function],
                              "border-start-start-radius": [Function],
                              "border-style": [Function],
                              "border-width": [Function],
                              "clear": [Function],
                              "float": [Function],
                              "inline-size": [Function],
                              "inset": [Function],
                              "inset-block": [Function],
                              "inset-block-end": [Function],
                              "inset-block-start": [Function],
                              "inset-inline": [Function],
                              "inset-inline-end": [Function],
                              "inset-inline-start": [Function],
                              "margin": [Function],
                              "margin-block": [Function],
                              "margin-block-end": [Function],
                              "margin-block-start": [Function],
                              "margin-inline": [Function],
                              "margin-inline-end": [Function],
                              "margin-inline-start": [Function],
                              "max-block-size": [Function],
                              "max-inline-size": [Function],
                              "min-block-size": [Function],
                              "min-inline-size": [Function],
                              "padding": [Function],
                              "padding-block": [Function],
                              "padding-block-end": [Function],
                              "padding-block-start": [Function],
                              "padding-inline": [Function],
                              "padding-inline-end": [Function],
                              "padding-inline-start": [Function],
                              "resize": [Function],
                              "text-align": [Function],
                              "transition": [Function],
                              "transition-property": [Function],
                            },
                            "postcssPlugin": "postcss-logical-properties",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          {
                            "browsers": [
                              "> 1%",
                              "last 2 versions",
                              "not ie <= 11",
                            ],
                            "info": [Function],
                            "options": {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": [
                                "> 1%",
                                "last 2 versions",
                                "not ie <= 11",
                              ],
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      [Function],
                    ],
                  },
                },
              },
              {
                "loader": "<WORKSPACE>/packages/bundler-compiled/compiled/stylus-loader/index.js",
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(styl\\|stylus\\)\\(\\\\\\?\\.\\*\\)\\?\\$/,
      },
    ],
  },
}
`;
