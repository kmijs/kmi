(function(){var t={918:function(t,e){(function(t,n){true?n(e):0})(this,(function(t){"use strict";const e=",".charCodeAt(0);const n=";".charCodeAt(0);const i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";const r=new Uint8Array(64);const s=new Uint8Array(128);for(let t=0;t<i.length;t++){const e=i.charCodeAt(t);r[t]=e;s[e]=t}function decodeInteger(t,e){let n=0;let i=0;let r=0;do{const e=t.next();r=s[e];n|=(r&31)<<i;i+=5}while(r&32);const o=n&1;n>>>=1;if(o){n=-2147483648|-n}return e+n}function encodeInteger(t,e,n){let i=e-n;i=i<0?-i<<1|1:i<<1;do{let e=i&31;i>>>=5;if(i>0)e|=32;t.write(r[e])}while(i>0);return e}function hasMoreVlq(t,n){if(t.pos>=n)return false;return t.peek()!==e}const o=1024*16;const h=typeof TextDecoder!=="undefined"?new TextDecoder:typeof Buffer!=="undefined"?{decode(t){const e=Buffer.from(t.buffer,t.byteOffset,t.byteLength);return e.toString()}}:{decode(t){let e="";for(let n=0;n<t.length;n++){e+=String.fromCharCode(t[n])}return e}};class StringWriter{constructor(){this.pos=0;this.out="";this.buffer=new Uint8Array(o)}write(t){const{buffer:e}=this;e[this.pos++]=t;if(this.pos===o){this.out+=h.decode(e);this.pos=0}}flush(){const{buffer:t,out:e,pos:n}=this;return n>0?e+h.decode(t.subarray(0,n)):e}}class StringReader{constructor(t){this.pos=0;this.buffer=t}next(){return this.buffer.charCodeAt(this.pos++)}peek(){return this.buffer.charCodeAt(this.pos)}indexOf(t){const{buffer:e,pos:n}=this;const i=e.indexOf(t,n);return i===-1?e.length:i}}const a=[];function decodeOriginalScopes(t){const{length:e}=t;const n=new StringReader(t);const i=[];const r=[];let s=0;for(;n.pos<e;n.pos++){s=decodeInteger(n,s);const t=decodeInteger(n,0);if(!hasMoreVlq(n,e)){const e=r.pop();e[2]=s;e[3]=t;continue}const o=decodeInteger(n,0);const h=decodeInteger(n,0);const l=h&1;const c=l?[s,t,0,0,o,decodeInteger(n,0)]:[s,t,0,0,o];let u=a;if(hasMoreVlq(n,e)){u=[];do{const t=decodeInteger(n,0);u.push(t)}while(hasMoreVlq(n,e))}c.vars=u;i.push(c);r.push(c)}return i}function encodeOriginalScopes(t){const e=new StringWriter;for(let n=0;n<t.length;){n=_encodeOriginalScopes(t,n,e,[0])}return e.flush()}function _encodeOriginalScopes(t,n,i,r){const s=t[n];const{0:o,1:h,2:a,3:l,4:c,vars:u}=s;if(n>0)i.write(e);r[0]=encodeInteger(i,o,r[0]);encodeInteger(i,h,0);encodeInteger(i,c,0);const d=s.length===6?1:0;encodeInteger(i,d,0);if(s.length===6)encodeInteger(i,s[5],0);for(const t of u){encodeInteger(i,t,0)}for(n++;n<t.length;){const e=t[n];const{0:s,1:o}=e;if(s>a||s===a&&o>=l){break}n=_encodeOriginalScopes(t,n,i,r)}i.write(e);r[0]=encodeInteger(i,a,r[0]);encodeInteger(i,l,0);return n}function decodeGeneratedRanges(t){const{length:e}=t;const n=new StringReader(t);const i=[];const r=[];let s=0;let o=0;let h=0;let l=0;let c=0;let u=0;let d=0;let f=0;do{const t=n.indexOf(";");let e=0;for(;n.pos<t;n.pos++){e=decodeInteger(n,e);if(!hasMoreVlq(n,t)){const t=r.pop();t[2]=s;t[3]=e;continue}const g=decodeInteger(n,0);const p=g&1;const w=g&2;const m=g&4;let S=null;let b=a;let x;if(p){const t=decodeInteger(n,o);h=decodeInteger(n,o===t?h:0);o=t;x=[s,e,0,0,t,h]}else{x=[s,e,0,0]}x.isScope=!!m;if(w){const t=l;const e=c;l=decodeInteger(n,l);const i=t===l;c=decodeInteger(n,i?c:0);u=decodeInteger(n,i&&e===c?u:0);S=[l,c,u]}x.callsite=S;if(hasMoreVlq(n,t)){b=[];do{d=s;f=e;const t=decodeInteger(n,0);let i;if(t<-1){i=[[decodeInteger(n,0)]];for(let e=-1;e>t;e--){const t=d;d=decodeInteger(n,d);f=decodeInteger(n,d===t?f:0);const e=decodeInteger(n,0);i.push([e,d,f])}}else{i=[[t]]}b.push(i)}while(hasMoreVlq(n,t))}x.bindings=b;i.push(x);r.push(x)}s++;n.pos=t+1}while(n.pos<e);return i}function encodeGeneratedRanges(t){if(t.length===0)return"";const e=new StringWriter;for(let n=0;n<t.length;){n=_encodeGeneratedRanges(t,n,e,[0,0,0,0,0,0,0])}return e.flush()}function _encodeGeneratedRanges(t,n,i,r){const s=t[n];const{0:o,1:h,2:a,3:l,isScope:c,callsite:u,bindings:d}=s;if(r[0]<o){catchupLine(i,r[0],o);r[0]=o;r[1]=0}else if(n>0){i.write(e)}r[1]=encodeInteger(i,s[1],r[1]);const f=(s.length===6?1:0)|(u?2:0)|(c?4:0);encodeInteger(i,f,0);if(s.length===6){const{4:t,5:e}=s;if(t!==r[2]){r[3]=0}r[2]=encodeInteger(i,t,r[2]);r[3]=encodeInteger(i,e,r[3])}if(u){const{0:t,1:e,2:n}=s.callsite;if(t!==r[4]){r[5]=0;r[6]=0}else if(e!==r[5]){r[6]=0}r[4]=encodeInteger(i,t,r[4]);r[5]=encodeInteger(i,e,r[5]);r[6]=encodeInteger(i,n,r[6])}if(d){for(const t of d){if(t.length>1)encodeInteger(i,-t.length,0);const e=t[0][0];encodeInteger(i,e,0);let n=o;let r=h;for(let e=1;e<t.length;e++){const s=t[e];n=encodeInteger(i,s[1],n);r=encodeInteger(i,s[2],r);encodeInteger(i,s[0],0)}}}for(n++;n<t.length;){const e=t[n];const{0:s,1:o}=e;if(s>a||s===a&&o>=l){break}n=_encodeGeneratedRanges(t,n,i,r)}if(r[0]<a){catchupLine(i,r[0],a);r[0]=a;r[1]=0}else{i.write(e)}r[1]=encodeInteger(i,l,r[1]);return n}function catchupLine(t,e,i){do{t.write(n)}while(++e<i)}function decode(t){const{length:e}=t;const n=new StringReader(t);const i=[];let r=0;let s=0;let o=0;let h=0;let a=0;do{const t=n.indexOf(";");const e=[];let l=true;let c=0;r=0;while(n.pos<t){let i;r=decodeInteger(n,r);if(r<c)l=false;c=r;if(hasMoreVlq(n,t)){s=decodeInteger(n,s);o=decodeInteger(n,o);h=decodeInteger(n,h);if(hasMoreVlq(n,t)){a=decodeInteger(n,a);i=[r,s,o,h,a]}else{i=[r,s,o,h]}}else{i=[r]}e.push(i);n.pos++}if(!l)sort(e);i.push(e);n.pos=t+1}while(n.pos<=e);return i}function sort(t){t.sort(sortComparator)}function sortComparator(t,e){return t[0]-e[0]}function encode(t){const i=new StringWriter;let r=0;let s=0;let o=0;let h=0;for(let a=0;a<t.length;a++){const l=t[a];if(a>0)i.write(n);if(l.length===0)continue;let c=0;for(let t=0;t<l.length;t++){const n=l[t];if(t>0)i.write(e);c=encodeInteger(i,n[0],c);if(n.length===1)continue;r=encodeInteger(i,n[1],r);s=encodeInteger(i,n[2],s);o=encodeInteger(i,n[3],o);if(n.length===4)continue;h=encodeInteger(i,n[4],h)}}return i.flush()}t.decode=decode;t.decodeGeneratedRanges=decodeGeneratedRanges;t.decodeOriginalScopes=decodeOriginalScopes;t.encode=encode;t.encodeGeneratedRanges=encodeGeneratedRanges;t.encodeOriginalScopes=encodeOriginalScopes;Object.defineProperty(t,"__esModule",{value:true})}))},127:function(t,e,n){"use strict";var i=n(918);class BitSet{constructor(t){this.bits=t instanceof BitSet?t.bits.slice():[]}add(t){this.bits[t>>5]|=1<<(t&31)}has(t){return!!(this.bits[t>>5]&1<<(t&31))}}class Chunk{constructor(t,e,n){this.start=t;this.end=e;this.original=n;this.intro="";this.outro="";this.content=n;this.storeName=false;this.edited=false;{this.previous=null;this.next=null}}appendLeft(t){this.outro+=t}appendRight(t){this.intro=this.intro+t}clone(){const t=new Chunk(this.start,this.end,this.original);t.intro=this.intro;t.outro=this.outro;t.content=this.content;t.storeName=this.storeName;t.edited=this.edited;return t}contains(t){return this.start<t&&t<this.end}eachNext(t){let e=this;while(e){t(e);e=e.next}}eachPrevious(t){let e=this;while(e){t(e);e=e.previous}}edit(t,e,n){this.content=t;if(!n){this.intro="";this.outro=""}this.storeName=e;this.edited=true;return this}prependLeft(t){this.outro=t+this.outro}prependRight(t){this.intro=t+this.intro}split(t){const e=t-this.start;const n=this.original.slice(0,e);const i=this.original.slice(e);this.original=n;const r=new Chunk(t,this.end,i);r.outro=this.outro;this.outro="";this.end=t;if(this.edited){r.edit("",false);this.content=""}else{this.content=n}r.next=this.next;if(r.next)r.next.previous=r;r.previous=this;this.next=r;return r}toString(){return this.intro+this.content+this.outro}trimEnd(t){this.outro=this.outro.replace(t,"");if(this.outro.length)return true;const e=this.content.replace(t,"");if(e.length){if(e!==this.content){this.split(this.start+e.length).edit("",undefined,true);if(this.edited){this.edit(e,this.storeName,true)}}return true}else{this.edit("",undefined,true);this.intro=this.intro.replace(t,"");if(this.intro.length)return true}}trimStart(t){this.intro=this.intro.replace(t,"");if(this.intro.length)return true;const e=this.content.replace(t,"");if(e.length){if(e!==this.content){const t=this.split(this.end-e.length);if(this.edited){t.edit(e,this.storeName,true)}this.edit("",undefined,true)}return true}else{this.edit("",undefined,true);this.outro=this.outro.replace(t,"");if(this.outro.length)return true}}}function getBtoa(){if(typeof window!=="undefined"&&typeof window.btoa==="function"){return t=>window.btoa(unescape(encodeURIComponent(t)))}else if(typeof Buffer==="function"){return t=>Buffer.from(t,"utf-8").toString("base64")}else{return()=>{throw new Error("Unsupported environment: `window.btoa` or `Buffer` should be supported.")}}}const r=getBtoa();class SourceMap{constructor(t){this.version=3;this.file=t.file;this.sources=t.sources;this.sourcesContent=t.sourcesContent;this.names=t.names;this.mappings=i.encode(t.mappings);if(typeof t.x_google_ignoreList!=="undefined"){this.x_google_ignoreList=t.x_google_ignoreList}}toString(){return JSON.stringify(this)}toUrl(){return"data:application/json;charset=utf-8;base64,"+r(this.toString())}}function guessIndent(t){const e=t.split("\n");const n=e.filter((t=>/^\t+/.test(t)));const i=e.filter((t=>/^ {2,}/.test(t)));if(n.length===0&&i.length===0){return null}if(n.length>=i.length){return"\t"}const r=i.reduce(((t,e)=>{const n=/^ +/.exec(e)[0].length;return Math.min(n,t)}),Infinity);return new Array(r+1).join(" ")}function getRelativePath(t,e){const n=t.split(/[/\\]/);const i=e.split(/[/\\]/);n.pop();while(n[0]===i[0]){n.shift();i.shift()}if(n.length){let t=n.length;while(t--)n[t]=".."}return n.concat(i).join("/")}const s=Object.prototype.toString;function isObject(t){return s.call(t)==="[object Object]"}function getLocator(t){const e=t.split("\n");const n=[];for(let t=0,i=0;t<e.length;t++){n.push(i);i+=e[t].length+1}return function locate(t){let e=0;let i=n.length;while(e<i){const r=e+i>>1;if(t<n[r]){i=r}else{e=r+1}}const r=e-1;const s=t-n[r];return{line:r,column:s}}}const o=/\w/;class Mappings{constructor(t){this.hires=t;this.generatedCodeLine=0;this.generatedCodeColumn=0;this.raw=[];this.rawSegments=this.raw[this.generatedCodeLine]=[];this.pending=null}addEdit(t,e,n,i){if(e.length){let r=e.indexOf("\n",0);let s=-1;while(r>=0){const o=[this.generatedCodeColumn,t,n.line,n.column];if(i>=0){o.push(i)}this.rawSegments.push(o);this.generatedCodeLine+=1;this.raw[this.generatedCodeLine]=this.rawSegments=[];this.generatedCodeColumn=0;s=r;r=e.indexOf("\n",r+1)}const o=[this.generatedCodeColumn,t,n.line,n.column];if(i>=0){o.push(i)}this.rawSegments.push(o);this.advance(e.slice(s+1))}else if(this.pending){this.rawSegments.push(this.pending);this.advance(e)}this.pending=null}addUneditedChunk(t,e,n,i,r){let s=e.start;let h=true;let a=false;while(s<e.end){if(this.hires||h||r.has(s)){const e=[this.generatedCodeColumn,t,i.line,i.column];if(this.hires==="boundary"){if(o.test(n[s])){if(!a){this.rawSegments.push(e);a=true}}else{this.rawSegments.push(e);a=false}}else{this.rawSegments.push(e)}}if(n[s]==="\n"){i.line+=1;i.column=0;this.generatedCodeLine+=1;this.raw[this.generatedCodeLine]=this.rawSegments=[];this.generatedCodeColumn=0;h=true}else{i.column+=1;this.generatedCodeColumn+=1;h=false}s+=1}this.pending=null}advance(t){if(!t)return;const e=t.split("\n");if(e.length>1){for(let t=0;t<e.length-1;t++){this.generatedCodeLine++;this.raw[this.generatedCodeLine]=this.rawSegments=[]}this.generatedCodeColumn=0}this.generatedCodeColumn+=e[e.length-1].length}}const h="\n";const a={insertLeft:false,insertRight:false,storeName:false};class MagicString{constructor(t,e={}){const n=new Chunk(0,t.length,t);Object.defineProperties(this,{original:{writable:true,value:t},outro:{writable:true,value:""},intro:{writable:true,value:""},firstChunk:{writable:true,value:n},lastChunk:{writable:true,value:n},lastSearchedChunk:{writable:true,value:n},byStart:{writable:true,value:{}},byEnd:{writable:true,value:{}},filename:{writable:true,value:e.filename},indentExclusionRanges:{writable:true,value:e.indentExclusionRanges},sourcemapLocations:{writable:true,value:new BitSet},storedNames:{writable:true,value:{}},indentStr:{writable:true,value:undefined},ignoreList:{writable:true,value:e.ignoreList}});this.byStart[0]=n;this.byEnd[t.length]=n}addSourcemapLocation(t){this.sourcemapLocations.add(t)}append(t){if(typeof t!=="string")throw new TypeError("outro content must be a string");this.outro+=t;return this}appendLeft(t,e){if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byEnd[t];if(n){n.appendLeft(e)}else{this.intro+=e}return this}appendRight(t,e){if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byStart[t];if(n){n.appendRight(e)}else{this.outro+=e}return this}clone(){const t=new MagicString(this.original,{filename:this.filename});let e=this.firstChunk;let n=t.firstChunk=t.lastSearchedChunk=e.clone();while(e){t.byStart[n.start]=n;t.byEnd[n.end]=n;const i=e.next;const r=i&&i.clone();if(r){n.next=r;r.previous=n;n=r}e=i}t.lastChunk=n;if(this.indentExclusionRanges){t.indentExclusionRanges=this.indentExclusionRanges.slice()}t.sourcemapLocations=new BitSet(this.sourcemapLocations);t.intro=this.intro;t.outro=this.outro;return t}generateDecodedMap(t){t=t||{};const e=0;const n=Object.keys(this.storedNames);const i=new Mappings(t.hires);const r=getLocator(this.original);if(this.intro){i.advance(this.intro)}this.firstChunk.eachNext((t=>{const s=r(t.start);if(t.intro.length)i.advance(t.intro);if(t.edited){i.addEdit(e,t.content,s,t.storeName?n.indexOf(t.original):-1)}else{i.addUneditedChunk(e,t,this.original,s,this.sourcemapLocations)}if(t.outro.length)i.advance(t.outro)}));return{file:t.file?t.file.split(/[/\\]/).pop():undefined,sources:[t.source?getRelativePath(t.file||"",t.source):t.file||""],sourcesContent:t.includeContent?[this.original]:undefined,names:n,mappings:i.raw,x_google_ignoreList:this.ignoreList?[e]:undefined}}generateMap(t){return new SourceMap(this.generateDecodedMap(t))}_ensureindentStr(){if(this.indentStr===undefined){this.indentStr=guessIndent(this.original)}}_getRawIndentString(){this._ensureindentStr();return this.indentStr}getIndentString(){this._ensureindentStr();return this.indentStr===null?"\t":this.indentStr}indent(t,e){const n=/^[^\r\n]/gm;if(isObject(t)){e=t;t=undefined}if(t===undefined){this._ensureindentStr();t=this.indentStr||"\t"}if(t==="")return this;e=e||{};const i={};if(e.exclude){const t=typeof e.exclude[0]==="number"?[e.exclude]:e.exclude;t.forEach((t=>{for(let e=t[0];e<t[1];e+=1){i[e]=true}}))}let r=e.indentStart!==false;const replacer=e=>{if(r)return`${t}${e}`;r=true;return e};this.intro=this.intro.replace(n,replacer);let s=0;let o=this.firstChunk;while(o){const e=o.end;if(o.edited){if(!i[s]){o.content=o.content.replace(n,replacer);if(o.content.length){r=o.content[o.content.length-1]==="\n"}}}else{s=o.start;while(s<e){if(!i[s]){const e=this.original[s];if(e==="\n"){r=true}else if(e!=="\r"&&r){r=false;if(s===o.start){o.prependRight(t)}else{this._splitChunk(o,s);o=o.next;o.prependRight(t)}}}s+=1}}s=o.end;o=o.next}this.outro=this.outro.replace(n,replacer);return this}insert(){throw new Error("magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)")}insertLeft(t,e){if(!a.insertLeft){console.warn("magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead");a.insertLeft=true}return this.appendLeft(t,e)}insertRight(t,e){if(!a.insertRight){console.warn("magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead");a.insertRight=true}return this.prependRight(t,e)}move(t,e,n){if(n>=t&&n<=e)throw new Error("Cannot move a selection inside itself");this._split(t);this._split(e);this._split(n);const i=this.byStart[t];const r=this.byEnd[e];const s=i.previous;const o=r.next;const h=this.byStart[n];if(!h&&r===this.lastChunk)return this;const a=h?h.previous:this.lastChunk;if(s)s.next=o;if(o)o.previous=s;if(a)a.next=i;if(h)h.previous=r;if(!i.previous)this.firstChunk=r.next;if(!r.next){this.lastChunk=i.previous;this.lastChunk.next=null}i.previous=a;r.next=h||null;if(!a)this.firstChunk=i;if(!h)this.lastChunk=r;return this}overwrite(t,e,n,i){i=i||{};return this.update(t,e,n,{...i,overwrite:!i.contentOnly})}update(t,e,n,i){if(typeof n!=="string")throw new TypeError("replacement content must be a string");while(t<0)t+=this.original.length;while(e<0)e+=this.original.length;if(e>this.original.length)throw new Error("end is out of bounds");if(t===e)throw new Error("Cannot overwrite a zero-length range – use appendLeft or prependRight instead");this._split(t);this._split(e);if(i===true){if(!a.storeName){console.warn("The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string");a.storeName=true}i={storeName:true}}const r=i!==undefined?i.storeName:false;const s=i!==undefined?i.overwrite:false;if(r){const n=this.original.slice(t,e);Object.defineProperty(this.storedNames,n,{writable:true,value:true,enumerable:true})}const o=this.byStart[t];const h=this.byEnd[e];if(o){let t=o;while(t!==h){if(t.next!==this.byStart[t.end]){throw new Error("Cannot overwrite across a split point")}t=t.next;t.edit("",false)}o.edit(n,r,!s)}else{const i=new Chunk(t,e,"").edit(n,r);h.next=i;i.previous=h}return this}prepend(t){if(typeof t!=="string")throw new TypeError("outro content must be a string");this.intro=t+this.intro;return this}prependLeft(t,e){if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byEnd[t];if(n){n.prependLeft(e)}else{this.intro=e+this.intro}return this}prependRight(t,e){if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byStart[t];if(n){n.prependRight(e)}else{this.outro=e+this.outro}return this}remove(t,e){while(t<0)t+=this.original.length;while(e<0)e+=this.original.length;if(t===e)return this;if(t<0||e>this.original.length)throw new Error("Character is out of bounds");if(t>e)throw new Error("end must be greater than start");this._split(t);this._split(e);let n=this.byStart[t];while(n){n.intro="";n.outro="";n.edit("");n=e>n.end?this.byStart[n.end]:null}return this}lastChar(){if(this.outro.length)return this.outro[this.outro.length-1];let t=this.lastChunk;do{if(t.outro.length)return t.outro[t.outro.length-1];if(t.content.length)return t.content[t.content.length-1];if(t.intro.length)return t.intro[t.intro.length-1]}while(t=t.previous);if(this.intro.length)return this.intro[this.intro.length-1];return""}lastLine(){let t=this.outro.lastIndexOf(h);if(t!==-1)return this.outro.substr(t+1);let e=this.outro;let n=this.lastChunk;do{if(n.outro.length>0){t=n.outro.lastIndexOf(h);if(t!==-1)return n.outro.substr(t+1)+e;e=n.outro+e}if(n.content.length>0){t=n.content.lastIndexOf(h);if(t!==-1)return n.content.substr(t+1)+e;e=n.content+e}if(n.intro.length>0){t=n.intro.lastIndexOf(h);if(t!==-1)return n.intro.substr(t+1)+e;e=n.intro+e}}while(n=n.previous);t=this.intro.lastIndexOf(h);if(t!==-1)return this.intro.substr(t+1)+e;return this.intro+e}slice(t=0,e=this.original.length){while(t<0)t+=this.original.length;while(e<0)e+=this.original.length;let n="";let i=this.firstChunk;while(i&&(i.start>t||i.end<=t)){if(i.start<e&&i.end>=e){return n}i=i.next}if(i&&i.edited&&i.start!==t)throw new Error(`Cannot use replaced character ${t} as slice start anchor.`);const r=i;while(i){if(i.intro&&(r!==i||i.start===t)){n+=i.intro}const s=i.start<e&&i.end>=e;if(s&&i.edited&&i.end!==e)throw new Error(`Cannot use replaced character ${e} as slice end anchor.`);const o=r===i?t-i.start:0;const h=s?i.content.length+e-i.end:i.content.length;n+=i.content.slice(o,h);if(i.outro&&(!s||i.end===e)){n+=i.outro}if(s){break}i=i.next}return n}snip(t,e){const n=this.clone();n.remove(0,t);n.remove(e,n.original.length);return n}_split(t){if(this.byStart[t]||this.byEnd[t])return;let e=this.lastSearchedChunk;const n=t>e.end;while(e){if(e.contains(t))return this._splitChunk(e,t);e=n?this.byStart[e.end]:this.byEnd[e.start]}}_splitChunk(t,e){if(t.edited&&t.content.length){const n=getLocator(this.original)(e);throw new Error(`Cannot split a chunk that has already been edited (${n.line}:${n.column} – "${t.original}")`)}const n=t.split(e);this.byEnd[e]=t;this.byStart[e]=n;this.byEnd[n.end]=n;if(t===this.lastChunk)this.lastChunk=n;this.lastSearchedChunk=t;return true}toString(){let t=this.intro;let e=this.firstChunk;while(e){t+=e.toString();e=e.next}return t+this.outro}isEmpty(){let t=this.firstChunk;do{if(t.intro.length&&t.intro.trim()||t.content.length&&t.content.trim()||t.outro.length&&t.outro.trim())return false}while(t=t.next);return true}length(){let t=this.firstChunk;let e=0;do{e+=t.intro.length+t.content.length+t.outro.length}while(t=t.next);return e}trimLines(){return this.trim("[\\r\\n]")}trim(t){return this.trimStart(t).trimEnd(t)}trimEndAborted(t){const e=new RegExp((t||"\\s")+"+$");this.outro=this.outro.replace(e,"");if(this.outro.length)return true;let n=this.lastChunk;do{const t=n.end;const i=n.trimEnd(e);if(n.end!==t){if(this.lastChunk===n){this.lastChunk=n.next}this.byEnd[n.end]=n;this.byStart[n.next.start]=n.next;this.byEnd[n.next.end]=n.next}if(i)return true;n=n.previous}while(n);return false}trimEnd(t){this.trimEndAborted(t);return this}trimStartAborted(t){const e=new RegExp("^"+(t||"\\s")+"+");this.intro=this.intro.replace(e,"");if(this.intro.length)return true;let n=this.firstChunk;do{const t=n.end;const i=n.trimStart(e);if(n.end!==t){if(n===this.lastChunk)this.lastChunk=n.next;this.byEnd[n.end]=n;this.byStart[n.next.start]=n.next;this.byEnd[n.next.end]=n.next}if(i)return true;n=n.next}while(n);return false}trimStart(t){this.trimStartAborted(t);return this}hasChanged(){return this.original!==this.toString()}_replaceRegexp(t,e){function getReplacement(t,n){if(typeof e==="string"){return e.replace(/\$(\$|&|\d+)/g,((e,n)=>{if(n==="$")return"$";if(n==="&")return t[0];const i=+n;if(i<t.length)return t[+n];return`$${n}`}))}else{return e(...t,t.index,n,t.groups)}}function matchAll(t,e){let n;const i=[];while(n=t.exec(e)){i.push(n)}return i}if(t.global){const e=matchAll(t,this.original);e.forEach((t=>{if(t.index!=null)this.overwrite(t.index,t.index+t[0].length,getReplacement(t,this.original))}))}else{const e=this.original.match(t);if(e&&e.index!=null)this.overwrite(e.index,e.index+e[0].length,getReplacement(e,this.original))}return this}_replaceString(t,e){const{original:n}=this;const i=n.indexOf(t);if(i!==-1){this.overwrite(i,i+t.length,e)}return this}replace(t,e){if(typeof t==="string"){return this._replaceString(t,e)}return this._replaceRegexp(t,e)}_replaceAllString(t,e){const{original:n}=this;const i=t.length;for(let r=n.indexOf(t);r!==-1;r=n.indexOf(t,r+i)){this.overwrite(r,r+i,e)}return this}replaceAll(t,e){if(typeof t==="string"){return this._replaceAllString(t,e)}if(!t.global){throw new TypeError("MagicString.prototype.replaceAll called with a non-global RegExp argument")}return this._replaceRegexp(t,e)}}const l=Object.prototype.hasOwnProperty;class Bundle{constructor(t={}){this.intro=t.intro||"";this.separator=t.separator!==undefined?t.separator:"\n";this.sources=[];this.uniqueSources=[];this.uniqueSourceIndexByFilename={}}addSource(t){if(t instanceof MagicString){return this.addSource({content:t,filename:t.filename,separator:this.separator})}if(!isObject(t)||!t.content){throw new Error("bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`")}["filename","ignoreList","indentExclusionRanges","separator"].forEach((e=>{if(!l.call(t,e))t[e]=t.content[e]}));if(t.separator===undefined){t.separator=this.separator}if(t.filename){if(!l.call(this.uniqueSourceIndexByFilename,t.filename)){this.uniqueSourceIndexByFilename[t.filename]=this.uniqueSources.length;this.uniqueSources.push({filename:t.filename,content:t.content.original})}else{const e=this.uniqueSources[this.uniqueSourceIndexByFilename[t.filename]];if(t.content.original!==e.content){throw new Error(`Illegal source: same filename (${t.filename}), different contents`)}}}this.sources.push(t);return this}append(t,e){this.addSource({content:new MagicString(t),separator:e&&e.separator||""});return this}clone(){const t=new Bundle({intro:this.intro,separator:this.separator});this.sources.forEach((e=>{t.addSource({filename:e.filename,content:e.content.clone(),separator:e.separator})}));return t}generateDecodedMap(t={}){const e=[];let n=undefined;this.sources.forEach((t=>{Object.keys(t.content.storedNames).forEach((t=>{if(!~e.indexOf(t))e.push(t)}))}));const i=new Mappings(t.hires);if(this.intro){i.advance(this.intro)}this.sources.forEach(((t,r)=>{if(r>0){i.advance(this.separator)}const s=t.filename?this.uniqueSourceIndexByFilename[t.filename]:-1;const o=t.content;const h=getLocator(o.original);if(o.intro){i.advance(o.intro)}o.firstChunk.eachNext((n=>{const r=h(n.start);if(n.intro.length)i.advance(n.intro);if(t.filename){if(n.edited){i.addEdit(s,n.content,r,n.storeName?e.indexOf(n.original):-1)}else{i.addUneditedChunk(s,n,o.original,r,o.sourcemapLocations)}}else{i.advance(n.content)}if(n.outro.length)i.advance(n.outro)}));if(o.outro){i.advance(o.outro)}if(t.ignoreList&&s!==-1){if(n===undefined){n=[]}n.push(s)}}));return{file:t.file?t.file.split(/[/\\]/).pop():undefined,sources:this.uniqueSources.map((e=>t.file?getRelativePath(t.file,e.filename):e.filename)),sourcesContent:this.uniqueSources.map((e=>t.includeContent?e.content:null)),names:e,mappings:i.raw,x_google_ignoreList:n}}generateMap(t){return new SourceMap(this.generateDecodedMap(t))}getIndentString(){const t={};this.sources.forEach((e=>{const n=e.content._getRawIndentString();if(n===null)return;if(!t[n])t[n]=0;t[n]+=1}));return Object.keys(t).sort(((e,n)=>t[e]-t[n]))[0]||"\t"}indent(t){if(!arguments.length){t=this.getIndentString()}if(t==="")return this;let e=!this.intro||this.intro.slice(-1)==="\n";this.sources.forEach(((n,i)=>{const r=n.separator!==undefined?n.separator:this.separator;const s=e||i>0&&/\r?\n$/.test(r);n.content.indent(t,{exclude:n.indentExclusionRanges,indentStart:s});e=n.content.lastChar()==="\n"}));if(this.intro){this.intro=t+this.intro.replace(/^[^\n]/gm,((e,n)=>n>0?t+e:e))}return this}prepend(t){this.intro=t+this.intro;return this}toString(){const t=this.sources.map(((t,e)=>{const n=t.separator!==undefined?t.separator:this.separator;const i=(e>0?n:"")+t.content.toString();return i})).join("");return this.intro+t}isEmpty(){if(this.intro.length&&this.intro.trim())return false;if(this.sources.some((t=>!t.content.isEmpty())))return false;return true}length(){return this.sources.reduce(((t,e)=>t+e.content.length()),this.intro.length)}trimLines(){return this.trim("[\\r\\n]")}trim(t){return this.trimStart(t).trimEnd(t)}trimStart(t){const e=new RegExp("^"+(t||"\\s")+"+");this.intro=this.intro.replace(e,"");if(!this.intro){let e;let n=0;do{e=this.sources[n++];if(!e){break}}while(!e.content.trimStartAborted(t))}return this}trimEnd(t){const e=new RegExp((t||"\\s")+"+$");let n;let i=this.sources.length-1;do{n=this.sources[i--];if(!n){this.intro=this.intro.replace(e,"");break}}while(!n.content.trimEndAborted(t));return this}}MagicString.Bundle=Bundle;MagicString.SourceMap=SourceMap;MagicString.default=MagicString;t.exports=MagicString}};var e={};function __nccwpck_require__(n){var i=e[n];if(i!==undefined){return i.exports}var r=e[n]={exports:{}};var s=true;try{t[n].call(r.exports,r,r.exports,__nccwpck_require__);s=false}finally{if(s)delete e[n]}return r.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var n=__nccwpck_require__(127);module.exports=n})();