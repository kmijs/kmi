(()=>{"use strict";var e={257:e=>{const t="text/plain";const r="us-ascii";const testParameter=(e,t)=>t.some((t=>t instanceof RegExp?t.test(e):t===e));const normalizeDataURL=(e,{stripHash:a})=>{const o=/^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(e);if(!o){throw new Error(`Invalid URL: ${e}`)}let{type:s,data:i,hash:n}=o.groups;const p=s.split(";");n=a?"":n;let c=false;if(p[p.length-1]==="base64"){p.pop();c=true}const h=(p.shift()||"").toLowerCase();const l=p.map((e=>{let[t,a=""]=e.split("=").map((e=>e.trim()));if(t==="charset"){a=a.toLowerCase();if(a===r){return""}}return`${t}${a?`=${a}`:""}`})).filter(Boolean);const f=[...l];if(c){f.push("base64")}if(f.length!==0||h&&h!==t){f.unshift(h)}return`data:${f.join(";")},${c?i.trim():i}${n?`#${n}`:""}`};const normalizeUrl=(e,t)=>{t={defaultProtocol:"http:",normalizeProtocol:true,forceHttp:false,forceHttps:false,stripAuthentication:true,stripHash:false,stripTextFragment:true,stripWWW:true,removeQueryParameters:[/^utm_\w+/i],removeTrailingSlash:true,removeSingleSlash:true,removeDirectoryIndex:false,sortQueryParameters:true,...t};e=e.trim();if(/^data:/i.test(e)){return normalizeDataURL(e,t)}if(/^view-source:/i.test(e)){throw new Error("`view-source:` is not supported as it is a non-standard protocol")}const r=e.startsWith("//");const a=!r&&/^\.*\//.test(e);if(!a){e=e.replace(/^(?!(?:\w+:)?\/\/)|^\/\//,t.defaultProtocol)}const o=new URL(e);if(t.forceHttp&&t.forceHttps){throw new Error("The `forceHttp` and `forceHttps` options cannot be used together")}if(t.forceHttp&&o.protocol==="https:"){o.protocol="http:"}if(t.forceHttps&&o.protocol==="http:"){o.protocol="https:"}if(t.stripAuthentication){o.username="";o.password=""}if(t.stripHash){o.hash=""}else if(t.stripTextFragment){o.hash=o.hash.replace(/#?:~:text.*?$/i,"")}if(o.pathname){o.pathname=o.pathname.replace(/(?<!\b(?:[a-z][a-z\d+\-.]{1,50}:))\/{2,}/g,"/")}if(o.pathname){try{o.pathname=decodeURI(o.pathname)}catch(e){}}if(t.removeDirectoryIndex===true){t.removeDirectoryIndex=[/^index\.[a-z]+$/]}if(Array.isArray(t.removeDirectoryIndex)&&t.removeDirectoryIndex.length>0){let e=o.pathname.split("/");const r=e[e.length-1];if(testParameter(r,t.removeDirectoryIndex)){e=e.slice(0,e.length-1);o.pathname=e.slice(1).join("/")+"/"}}if(o.hostname){o.hostname=o.hostname.replace(/\.$/,"");if(t.stripWWW&&/^www\.(?!www\.)(?:[a-z\-\d]{1,63})\.(?:[a-z.\-\d]{2,63})$/.test(o.hostname)){o.hostname=o.hostname.replace(/^www\./,"")}}if(Array.isArray(t.removeQueryParameters)){for(const e of[...o.searchParams.keys()]){if(testParameter(e,t.removeQueryParameters)){o.searchParams.delete(e)}}}if(t.removeQueryParameters===true){o.search=""}if(t.sortQueryParameters){o.searchParams.sort()}if(t.removeTrailingSlash){o.pathname=o.pathname.replace(/\/$/,"")}const s=e;e=o.toString();if(!t.removeSingleSlash&&o.pathname==="/"&&!s.endsWith("/")&&o.hash===""){e=e.replace(/\/$/,"")}if((t.removeTrailingSlash||o.pathname==="/")&&o.hash===""&&t.removeSingleSlash){e=e.replace(/\/$/,"")}if(r&&!t.normalizeProtocol){e=e.replace(/^http:\/\//,"//")}if(t.stripProtocol){e=e.replace(/^(?:https?:)?\/\//,"")}return e};e.exports=normalizeUrl}};var t={};function __nccwpck_require__(r){var a=t[r];if(a!==undefined){return a.exports}var o=t[r]={exports:{}};var s=true;try{e[r](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[r]}return o.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var r=__nccwpck_require__(257);module.exports=r})();