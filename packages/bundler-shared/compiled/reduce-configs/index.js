(function(){"use strict";var e={};!function(){e.d=function(n,r){for(var t in r){if(e.o(r,t)&&!e.o(n,t)){Object.defineProperty(n,t,{enumerable:true,get:r[t]})}}}}();!function(){e.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)}}();!function(){e.r=function(e){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}}();if(typeof e!=="undefined")e.ab=__dirname+"/";var n={};e.r(n);e.d(n,{reduceConfigs:function(){return reduceConfigs},reduceConfigsAsyncWithContext:function(){return reduceConfigsAsyncWithContext},reduceConfigsMergeContext:function(){return reduceConfigsMergeContext},reduceConfigsWithContext:function(){return reduceConfigsWithContext}});var isNil=e=>e===void 0||e===null;var isFunction=e=>typeof e==="function";var isObject=e=>e!==null&&typeof e==="object";var isPlainObject=e=>isObject(e)&&Object.prototype.toString.call(e)==="[object Object]";function reduceConfigs({initial:e,config:n,mergeFn:r=Object.assign}){if(isNil(n)){return e}if(isPlainObject(n)){return isPlainObject(e)?r(e,n):n}if(isFunction(n)){return n(e)??e}if(Array.isArray(n)){return n.reduce(((e,n)=>reduceConfigs({initial:e,config:n,mergeFn:r})),e)}return n??e}function reduceConfigsWithContext({initial:e,config:n,ctx:r,mergeFn:t=Object.assign}){if(isNil(n)){return e}if(isPlainObject(n)){return isPlainObject(e)?t(e,n):n}if(isFunction(n)){return n(e,r)??e}if(Array.isArray(n)){return n.reduce(((e,n)=>reduceConfigsWithContext({initial:e,config:n,ctx:r,mergeFn:t})),e)}return n??e}async function reduceConfigsAsyncWithContext({initial:e,config:n,ctx:r,mergeFn:t=Object.assign}){if(isNil(n)){return e}if(isPlainObject(n)){return isPlainObject(e)?t(e,n):n}if(isFunction(n)){return await n(e,r)??e}if(Array.isArray(n)){return n.reduce(((e,n)=>reduceConfigsWithContext({initial:e,config:n,ctx:r,mergeFn:t})),e)}return n??e}function reduceConfigsMergeContext({initial:e,config:n,ctx:r,mergeFn:t=Object.assign}){if(isNil(n)){return e}if(isPlainObject(n)){return isPlainObject(e)?t(e,n):n}if(isFunction(n)){return n({value:e,...r})??e}if(Array.isArray(n)){return n.reduce(((e,n)=>reduceConfigsMergeContext({initial:e,config:n,ctx:r,mergeFn:t})),e)}return n??e}module.exports=n})();